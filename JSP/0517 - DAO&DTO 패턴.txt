모듈화(Modulation)
- 어떤 기능을 담당하는 작은 단위를 모듈(Module)이라고 함
- 하나의 프로그램에서 특정 기능에 따라 작은 단위의 클래스 또는 메서드 형태로
  작게 분리하는 것을 모듈화라고 함
============================================================================
[ Model 1 개발 방식 ]
- 하나의 파일 내에서 디자인 관련 부분(프레젠테이션 로직)과 개발 관련 부분(비즈니스 로직)이
  함께 존재하는 형태의 개발 방식

[ Model 2 개발 방식 ]
- 프레젠테이션 로직과 비즈니스 로직을 분리하여 필요한 데이터만 서로 주고 받는 형태로 개발하는 방식
===============================================================================
[ 디자인 패턴(Design Pattern) ]
- 프로그램 개발 시 정형화 된 개발 코드 형태를 사용하여 특정 프로그램을 개발하는 코드 형식
ex) 싱글톤 디자인 패턴, DAO&DTO 패턴, 옵저버 패턴, MVC 패턴 등

[ DAO & DTO 패턴 ]
- 데이터베이스 연동 프로그램을 개발할 때 데이터베이스 처리 작업을 DAO 클래스를 통해 구현하고
  데이터베이스 처리를 위해 사용되는 데이터를 저장하는 작업을 DTO 클래스를 통해 구현하는 개발 방식

1. DAO(Data Access Object, 데이터 접근 객체)
- 데이터베이스 처리 작업에 필요한 코드만 따로 모아놓은(모듈화 한) 클래스(객체)
- 데이터베이스 연결 및 해제 작업과 각 SQL 구문을 실행하는 코드를
  별도의 메서드를 통해 기술해 놓고 외부에서 호출해서 사용할 수 있도록 제공
  => 외부에서 DAO 클래스의 인스턴스(객체)를 생성한 후 메서드를 호출하여
     필요한 데이터베이스 작업 수행
- XXXDAO 라는 이름의 클래스를 정의
  => XXXDAO 의 XXX 은 해당 데이터베이스 작업을 수행하는 테이블명을 주로 사용
     ex) 회원정보를 담는 member 테이블일 경우 DAO 클래스명 : MemberDAO
         게시물정보를 담는 board 테이블일 경우 DAO 클래스명 : BoardDAO

2. DTO(Data Transport Object, 데이터 전송 객체)
- 데이터베이스 작업에 필요한 데이터를 관리하는 클래스(객체)
- DAO 객체가 데이터베이스 작업을 수행하기 위해 사용할 데이터를 전달하거나
  DAO 객체로부터 조회된 데이터를 리턴받을 때 변수를 사용하여 각 데이터를 관리해도 되지만
  DTO 객체를 통해 여러 데이터를 하나의 묶음(= 객체)으로 관리하고, 전송할 수 있도록 함
- 데이터베이스 테이블 내의 각 컬럼에 대응하는 인스턴스 멤버변수와
  각 멤버변수에 대한 Getter/Setter 메서드로 구성됨(생성자도 필요에 따라 정의)
  => 이 때, 멤버변수 접근제한자를 private 으로 지정하고,
     멤버변수에 접근할 Getter/Setter 메서드의 접근제한자는 public 을 지정한다.
- XXXDTO 라는 이름의 클래스를 정의(또는 XXXBean, XXXVo 등의 다양한 이름 사용 가능)
  => XXXDTO 의 XXX 은 해당 데이터베이스 작업을 수행하는 테이블명을 주로 사용
     ex) 회원정보를 담는 member 테이블일 경우 DTO 클래스명 : MemberDTO
         게시물정보를 담는 board 테이블일 경우 DTO 클래스명 : BoardDTO
  







